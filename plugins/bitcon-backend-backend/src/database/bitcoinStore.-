//import {
//  DatabaseService,
//  resolvePackagePath,
//} from '@backstage/backend-plugin-api';
//import { Knex } from 'knex';
//
//export interface BitcoinModel {
//  code: string;
//  symbol: string;
//  rate: number;
//  description: string;
//  rate_float: number;
//}
//
//export interface BitcoinStore {
//  create(bitcoinData: BitcoinModel): Promise<undefined>;
//  getValueByCurrency(currency: string): Promise<{ bitcoinData: BitcoinModel }>;
//}
//
//const migrationsDir = resolvePackagePath('migrations');
//
//export class DatabaseBitcoinStore implements BitcoinStore {
//  private constructor(private readonly db: Knex) {}
//
//  static async create({
//    database,
//    skipMigrations,
//  }: {
//    database: DatabaseService;
//    skipMigrations?: boolean;
//  }): Promise<DatabaseBitcoinStore> {
//    const client = await database.getClient();
//
//    if (!database.migrations?.skip && !skipMigrations) {
//      await client.migrate.latest({
//        directory: migrationsDir,
//      });
//    }
//
//    return new DatabaseBitcoinStore(client);
//  }
//
//  async create(bitcoinData: BitcoinModel): Promise<undefined> {
//    await this.db('bitcoin').insert(bitcoinData);
//  }
//
//  async getValueByCurrency(
//    currency: string,
//  ): Promise<{ bitcoinData: BitcoinModel }> {
//    const result = await this.db('bitcoin')
//      .select('code', 'symbol', 'rate', 'description', 'rate_float')
//      .where({ currency: currency })
//      .first();
//
//    return result;
//  }
//}
